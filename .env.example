# Server Configuration
## Port to use for the load balancer / proxy
SERVER_PORT=8080

# Configuration File
## Path to the endpoints config file
CONFIG_FILE="configs/endpoints.json"

# CORS Configuration
## Allowed headers for CORS requests
CORS_HEADERS="Accept, Authorization, Content-Type, Origin, X-Requested-With"
## Allowed HTTP methods for CORS requests
CORS_METHODS="GET, POST, OPTIONS"
## Allowed origins for CORS requests
CORS_ORIGIN="*"

# RPC Provider API Keys
## Only needed for the example config
## They can be called whatever you want, but they have to match
## the vars you reference from the `config/endpoints.json` file
ALCHEMY_API_KEY=your_alchemy_api_key_here
INFURA_API_KEY=your_infura_api_key_here

# Redis Configuration
## Host and port for Redis server
REDIS_HOST=localhost
REDIS_PORT=6379
## Redis password (leave empty or unset if no password is needed)
REDIS_PASS=SOME_PASS
## Whether to use TLS for connecting to Redis
REDIS_USE_TLS=false
## Whether to skip TLS certificate validation when connecting to Redis
REDIS_SKIP_TLS_CHECK=false

# Health Check Configuration
## Amount of consecutive successful responses from the endpoint required to consider it as being healthy again
EPHEMERAL_CHECKS_HEALTHY_THRESHOLD=3
## Interval in seconds for ephemeral health checks (only used when HEALTH_CHECK_INTERVAL=0)
EPHEMERAL_CHECKS_INTERVAL=30
## Interval in seconds between health checks (0 to disable)
HEALTH_CHECK_INTERVAL=30
## Enable standalone health checker (true/false)
## Set to false to run health checks integrated with the load balancer
STANDALONE_HEALTH_CHECKS=true

# Proxy Configuration
## Maximum number of retries for proxy requests
PROXY_MAX_RETRIES=3
## Total timeout for proxy requests in seconds (what the end user sees)
PROXY_TIMEOUT=15
## Timeout per individual retry attempt in seconds
PROXY_TIMEOUT_PER_TRY=5
## Prioritize public endpoints over primary endpoints (true/false)
PUBLIC_FIRST=false
## Number of attempts to make at public endpoints before trying primary/fallback
PUBLIC_FIRST_ATTEMPTS=2

# Logging Configuration
## Log level: debug, info, warn, error, fatal, panic
LOG_LEVEL=info

# Prometheus Metrics Configuration
## Whether to enable Prometheus metrics
METRICS_ENABLED=true
## Port for the Prometheus metrics server
METRICS_PORT=9090
