apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data-pvc
  namespace: aetherlay
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: aetherlay
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:8.0-alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
        command: ["redis-server", "--requirepass", "$(REDIS_PASS)", "--appendonly", "yes"]
        env:
        - name: REDIS_PASS
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: redis-pass
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: aetherlay
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: aetherlay
  labels:
    app: redis
type: Opaque
data:
  # Replace this with your base64-encoded Redis password
  # To generate: echo -n "your_password" | base64
  redis-pass: <base64-encoded-redis-pass>
