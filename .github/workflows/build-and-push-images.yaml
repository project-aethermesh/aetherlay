name: Build and Push Docker Images to GHCR

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image tag for manual builds. If not set, the branch name is used for non-main branches.'
        required: false
        type: string
  push:
    branches:
      - main
    paths:
      - '**.go'
      - '**/Dockerfile'
      - '.github/workflows/build-and-push-images.yaml'

jobs:
  setup:
    name: Setup workflow
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.set_outputs.outputs.short_sha }}

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Set outputs
        id: set_outputs
        shell: bash
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  test:
    name: Run Go tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4

      - name: Set up Go
        id: setup_go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run tests
        id: run_tests
        run: |
          mv configs/endpoints{-example,}.json
          go test ./...

  health-checker:
    name: Build health-checker image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}
    needs:
      - setup
      - test
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4

      - name: Set up Go
        id: setup_go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Log in to GitHub Container Registry
        id: login_ghcr
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.AETHERLAY_GITHUB_TOKEN }}

      - name: Docker meta for health-checker
        id: meta_hc
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/project-aethermesh/aetherlay/aetherlay-hc
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == github.event.repository.default_branch }}
            type=sha,format=short,enable=${{ github.ref_name == github.event.repository.default_branch }}
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag != '' }}
            type=ref,event=branch,enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag == '' && github.ref_name != github.event.repository.default_branch }}
          labels: |
            org.opencontainers.image.vendor=Project Aethermesh
            org.opencontainers.image.licenses=AGPL-3.0

      - name: Build and push health-checker image
        id: container_image_hc
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./services/health-checker/Dockerfile
          push: true
          tags: ${{ steps.meta_hc.outputs.tags }}
          labels: ${{ steps.meta_hc.outputs.labels }}

  load-balancer:
    name: Build load-balancer image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}
    needs:
      - setup
      - test
    steps:
      - name: Checkout code
        id: checkout_lb
        uses: actions/checkout@v4

      - name: Set up Go
        id: setup_go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Log in to GitHub Container Registry
        id: login_ghcr_lb
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.AETHERLAY_GITHUB_TOKEN }}

      - name: Docker meta for load-balancer
        id: meta_lb
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/project-aethermesh/aetherlay/aetherlay-lb
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == github.event.repository.default_branch }}
            type=sha,format=short,enable=${{ github.ref_name == github.event.repository.default_branch }}
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag != '' }}
            type=ref,event=branch,enable=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag == '' && github.ref_name != github.event.repository.default_branch }}
          labels: |
            org.opencontainers.image.vendor=Project Aethermesh
            org.opencontainers.image.licenses=AGPL-3.0

      - name: Build and push load-balancer image
        id: container_image_lb
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./services/load-balancer/Dockerfile
          push: true
          tags: ${{ steps.meta_lb.outputs.tags }}
          labels: ${{ steps.meta_lb.outputs.labels }}
